{
  "scopeName": "source.production_flow_description_language",
  "patterns": [
    {
      "include": "#expression"
    }
  ],
  "repository": {
    "expression": {
      "patterns": [
        {
          "include": "#operator"
        },
        {
          "include": "#attribute_type"
        },
        {
          "include": "#number"
        },
        {
          "include": "#control"
        },
        {
          "include": "#string"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#boolean"
        },
        {
          "include": "#serviceAndStruct"
        }
      ]
    },
    "operator": {
      "match": "^\\s*(Struct|Task|End)\\b",
      "name": "storage.type"
    },
    "attribute_type": {
      "match": "(?<=[a-z][a-zA-Z0-9_]+\\s*:\\s*)[a-z][a-zA-Z0-9_]*",
      "name": "entity.name.type"
    },
    "comment": {
      "match": "#.*",
      "name": "comment.line.number-sign"
    },
    "control": {
      "match": "(?<!\\w)(OnDone|Loop|While|In|Out|Condition|Passed|Failed|And|Or|Parallel)(?!\\w)",
      "name": "keyword.control"
    },
    "boolean": {
      "match": "(?<!\\w)(true|false)(?!\\w)",
      "name": "constant.language"
    },
    "string": {
      "match": "\".*\"",
      "name": "string.quoted.double"
    },
    "number": {
      "match": "(?<!\\w)\\d+(?!\\w)",
      "name": "constant.language"
    },
    "serviceAndStruct": {
      "match": "(?<!\\w)[A-Z][a-zA-Z0-9_]*(?!\\w)",
      "name": "entity.name.type"
    }
  }
}
